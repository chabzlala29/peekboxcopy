%h1
	Pictures in "#{@album.title}" Album
-unless current_user== nil
	-if current_user.admin
		%div
			=link_to "Edit #{@album.title}", edit_profile_album_path(@album.id)
-if @pictures.empty?
	%p 
		No Picture Available
-else
	-@pictures.each do |pic|
		%div#each
			%div.thumbnail-wrapper
				=link_to (image_tag pic.image_url(:picture_thumb).to_s), album_pictures_path(pic.id)
				%div#album_title.item-title-wrapper
					%p.item-title
						=pic.title	
%br{:style => "clear:both"}

= form_for :picture, :url => profile_album_pictures_path(@album.id), :html => {:multipart => true} do |picture_form| 
	%label{:for => "title"} Title:
	%br
	=picture_form.text_field :title
	%br
	%label{:for => "Description"} Description:
	%br
	= picture_form.text_area :description
	%br
	%label{:for => "image"} File:
	%br
	= picture_form.file_field :image
	%br
	= submit_tag "Upload Picture"


- key = Rails.application.config.session_options[:key]

= content_for :scripts do
	:javascript
		var upload_params = {
			'#{key}' : '#{cookies[key]}',
			'#{request_forgery_protection_token}' : '#{form_authenticity_token}',
			'_http_accept': 'application/javascript'
		};

		var url = '#{multiupload_profile_album_pictures_path(@album.id)}';
		$('input#photo_image').uploadify({
			'uploader'     : '#{multiupload_profile_album_pictures_path(@album.id)}',
			'swf' 		     : '#{asset_path("uploadify.swf")}',
			'script'       : url,
			'checkExisting'   : false,
			'fileDataName' : 'photo[image]',
			'fileExt'      : '*.png;*.jpg;*.gif',
			'cancelImage'    : '#{asset_path("uploadify-cancel.png")}',
			'multi'        : true,
			'fileObjName'     : 'picture[image]',
			'preventCaching'  : false,
			'postData'   : upload_params,
			'auto'         : true,
			'onComplete'   : function(e, id, obj, response, data) {
				$('#photos').append(response);
			}
		});

=fields_for Picture.new do |f|
	=f.file_field :image, :rel => profile_album_pictures_path(@album), :id => "photo_image"

//=button_tag "multiple upload", {:id=> "photo_image" }

